#!groovy

//@Library('functions')_

pipeline {
	agent any // Default Agent
    // triggers {
    //     cron('H */4 * * 1-5')
    // }

    parameters {
        booleanParam(name: 'integrationTest', defaultValue: true, description: 'Test in DEV Environment??')
    }
    environment {
        DOCKERHUB_CREDENTIALS=credentials('dockerhub-auth')
        DOCKERHUB_HOST="moritz121"
        TAG_NAME=getLastGitTag()
    }

    stages {

        stage('List env vars') {
            steps{
                sh "printenv | sort"
            }
        }

        stage('Docker Build Tests') {
            steps {
                sh 'docker build -t devops-training-flask-app-test -f tests.Dockerfile .'
            }
        }

        stage('Unit Test') {
            agent {
                docker {
                    image 'devops-training-flask-app'
                }
            }
            steps {
                sh 'pytest -v -l --tb=short --maxfail=1 tests/'
            }
        }

        stage('Docker Build') {
            steps {
                sh 'docker build -t devops-training-flask-app -f Dockerfile .'
            }
        }

    }

    post {
        always  {
            sh 'docker logout'
        }
        success {
            // send mail
            echo "SUCCESS"
        }
    }

}


def getLastGitTag() {
    sh "git tag --sort version:refname | head -n 1 > version.tmp"
    String tag = readFile 'version.tmp'
    tag = tag != "" ? tag : "0.0.1"
    echo "Branch: ${scm.branches[0].name}"
    echo "Tag, ${tag}." 
    return tag
}